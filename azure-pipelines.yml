# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

variables:
  System.Debug: false
  PathToSql: '$(Build.SourcesDirectory)/GeneratedOutputFiles/AdventureWorks2016_Script.sql'
  PathToScriptDomLibrary: '$(Build.SourcesDirectory)/Tools/Microsoft.SqlServer.TransactSql.ScriptDom.dll'
  
stages:
  - stage: Builds
    displayName: Build artifacts to be deployed
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    jobs:
      - job: BuildDotNetDesktop
        displayName: Build the database scehma's dacpac
        pool:
          vmImage: 'windows-latest'
        steps:
        - task: NuGetToolInstaller@1
        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        - task: SqlAzureDacpacDeployment@1
          displayName: 'Create a DIFF script that compares the dacpac with the target database'
          inputs:
            azureSubscription: 'Assaf''s Microsoft Azure Internal Consumption(d98ee679-4c4d-4a03-9181-ea7a16d0b5a8)'
            AuthenticationType: 'server'
            ServerName: 'awdemo4teck.database.windows.net'
            DatabaseName: 'AdventureWorks2016'
            SqlUsername: '$(SQL_USER)'
            SqlPassword: '$(SQL_PASSWORD)'
            deployType: 'DacpacTask'
            DeploymentAction: 'Script'
            DacpacFile: '$(Build.SourcesDirectory)/AdventureWorks2016/bin/$(buildConfiguration)/AdventureWorks2016.dacpac'
            PublishProfile: '$(Build.SourcesDirectory)/AdventureWorks2016/bin/$(buildConfiguration)/AdventureWorks2016.publish.xml'
            IpDetectionMethod: 'AutoDetect'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              Write-Host "Migration Script"
              Get-ChildItem $(Build.SourcesDirectory)/GeneratedOutputFiles/*.sql | Get-Content
        - task: Pester@8
          displayName: 'Trust but verify'
          inputs:
            scriptFolder: '$(Build.SourcesDirectory)/tests/Test-SqlScripts.ps1'
            resultsFile: '$(Build.SourcesDirectory)/AdventureWorks2016/bin/$(buildConfiguration)/Test-Pester.XML'
            run32Bit: False
        - task: PublishTestResults@2
          condition: always()
          inputs:
            buildConfiguration: '$(buildConfiguration)'
            buildPlatform: '$(buildPlatform)'
            testResultsFiles: '$(Build.SourcesDirectory)/AdventureWorks2016/bin/$(buildConfiguration)/Test-Pester.XML'
            testResultsFormat: NUnit
            
        - task: CopyFiles@2
          displayName: 'Copy dacpac files'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/AdventureWorks2016/bin/$(buildConfiguration)'
            Contents: |
              **/*.dacpac
              **/*.publish.xml
            TargetFolder: '$(Build.ArtifactStagingDirectory)/database'
        - task: CopyFiles@2
          displayName: 'Copy diff script'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/GeneratedOutputFiles'
            Contents: |
              **/*.sql
            TargetFolder: '$(Build.ArtifactStagingDirectory)/database'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/database'
            artifact: 'database'
            publishLocation: 'pipeline'

  - stage: Deployments
    displayName: Deploy artifacts to Azure
    jobs:
      - deployment: DeployDatabase
        displayName: Deploy database schema changes to Azure
        pool:
          vmImage: 'windows-latest'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
              - task: SqlAzureDacpacDeployment@1
                inputs:
                  azureSubscription: 'Assaf''s Microsoft Azure Internal Consumption(d98ee679-4c4d-4a03-9181-ea7a16d0b5a8)'
                  AuthenticationType: 'server'
                  ServerName: 'awdemo4teck.database.windows.net'
                  DatabaseName: 'AdventureWorks2016'
                  SqlUsername: $(SQL_USER)
                  SqlPassword: $(SQL_PASSWORD)
                  deployType: 'DacpacTask'
                  DeploymentAction: 'Publish'
                  DacpacFile: '$(Pipeline.Workspace)/database/AdventureWorks2016.dacpac'
                  PublishProfile: '$(Pipeline.Workspace)/database/AdventureWorks2016.publish.xml'
                  IpDetectionMethod: 'AutoDetect'
